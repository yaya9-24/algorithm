package chap05;
// 재귀에 대한 이해를 돕는 순수 재귀 메서드

import java.util.Scanner;

class C01_Recursive2_if_Double {
	// --- 순수 재귀 메서드 ---//
	static void recur(int n, String x) {// x변수는 어느 함수의 리턴인가를 확인하기위한 변수
		System.out.println("a:" + n + " << " + x);// 5,4,3,2,1,0
		if (n > 0) {
			recur(n - 1, "n-1");// 9라인 재귀호출

			System.out.println("b:" + n);// 1찍고 아래함수콜,2찍고 아래함수콜,3,4,5
			recur(n - 2, "n-2");
		}
		System.out.println("...return...." + x);
		// 더이상 남은 재귀함수 없으면 최초호출한 곳으로 ~~~~
	}

	public static void main(String[] args) {
		Scanner stdIn = new Scanner(System.in);

		System.out.println("정수를 입력하세요 : ");
//        int x = stdIn.nextInt();
		int x = 5;

		recur(x, "main");
	}

	// a를 찍으면서 재귀호출되던 가장 마지막함수부터 sysout 찍는다
	// 즉,a:0찍는 재귀함수가 가장마지막 함수로서 분기문 안들어가니까 리턴(n-1)
	// 그다음 a:1 찍었던함수 sysout 실행 b:1 찍고
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:1 일때는 2빼면 -1이므로 a:-1 찍고 if문에 안걸리고 리턴(n-2)
	// recur(n - 1) 콜한 곳으로 와서 리턴

	// 그다음 a:2 찍었던함수 sysout b:2
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:2 일때는 0이므로 a:0 찍고 if문에 안걸리고 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-1)

	// 그다음 a:3 찍었던함수 sysout b:3
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:3 일때는 1이므로 a:1 찍고 if문에 걸리고
	// 오~ 또 다시 recur(n - 1) 재귀호출
	// 다시반복 a:1,a:0찍고 리턴(n-1)
	// 그다음 다시 0은 제외되고 a:1 찍었던함수 sysout b:1
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:1 일때는 -1이므로 a:-1 찍고 if문에 안걸리고 리턴(n-2)
	// recur(n - 2) 콜한 곳으로 와서 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-1)

	// 그다음 a:4 찍었던함수 sysout b:4
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:4 일때는 2이므로 a:2 찍고 if문에 걸리고
	// 오~ 또 다시 recur(n - 1) 재귀호출
	// 다시반복 a:2,a:1,a:0찍고 리턴(n-1)

	// 그다음 다시 0은 재외되고 a:1 찍었던함수 sysout b:1
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:1 일때는 -1이므로 a:-1 찍고 if문에 안걸리고 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-1)

	// a:2 찍었던함수 sysout b:2
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:2 일때는 0이므로 a:0 찍고 if문에 안걸리고 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-1)

	// 만약 5를 입력했다고한다면 아래까지 수행하면서 반복
	// 그다음 a:5 찍었던함수 sysout b:5
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:5 일때는 3이므로 a:3 찍고 if문에 걸리고
	// 오~ 또 다시 recur(n - 1) 재귀호출
	// 다시반복 a:3,a:2,a:1,a:0찍고 리턴(n-1)

	// 그다음 다시 0은 제외되고 a:1 찍었던함수 sysout b:1
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:1 일때는 -1이므로 a:-1 찍고 if문에 안걸리고 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-1)

	// a:2 찍었던함수 sysout b:2
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:2 일때는 0이므로 a:0 찍고 if문에 안걸리고 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-1)

	// a:3 찍었던함수 sysout b:3
	// b:3 일때는 1이므로 a:1 찍고 if문에 걸리고
	// 오~ 또 다시 recur(n - 1) 재귀호출
	// 다시반복 a:1,a:0찍고 리턴(n-1)

	// 그다음 다시 0은 제외되고 a:1 찍었던함수 sysout b:1
	// 앗,또 재귀함수 recur(n - 2) 콜해야하네
	// b:1 일때는 -1이므로 a:-1 찍고 if문에 안걸리고 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-2)
	// 콜한 곳으로 와서 리턴(n-2)
	// 최초 콜한 곳으로 와서 리턴(0)

}
